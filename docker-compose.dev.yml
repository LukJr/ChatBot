services:
  chatbot-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - OLLAMA_HOST=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-gemma3:latest} #gemma3:1b}
      - WATCHPACK_POLLING=true # Enable polling for Windows file changes
    volumes:
      - .:/app:cached # Use cached mode for better performance on Windows
      - chatbot_node_modules:/app/node_modules # Use named volume for node_modules
      - chatbot_next_cache:/app/.next # Use named volume for .next
    restart: unless-stopped
    depends_on:
      - ollama
    command: npm run dev

  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped

  ollama-init:
    image: alpine:latest
    depends_on:
      - ollama
    command: >
      sh -c "
        echo 'Waiting for Ollama service to be ready...' &&
        apk add --no-cache wget curl &&
        for i in {1..30}; do
          if wget -q --spider http://ollama:11434/api/tags; then
            echo 'Ollama service is up!' &&
            echo 'Pulling model ${OLLAMA_MODEL:-gemma3:latest}...' &&
            curl -X POST http://ollama:11434/api/pull -d '{\"name\":\"${OLLAMA_MODEL:-gemma3:latest}\"}' &&
            echo 'Model pulled successfully!' &&
            exit 0;
          fi;
          echo 'Waiting...' &&
          sleep 2;
        done;
        echo 'Ollama service failed to start in time!' &&
        exit 1;
      "
    restart: on-failure

volumes:
  ollama_data:
  chatbot_node_modules:
  chatbot_next_cache: 